{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nlet ToolbarComponent = class ToolbarComponent {\n  selectedRole = 'Admin';\n  roleChanged = new EventEmitter();\n  logoutClicked = new EventEmitter();\n  dropdownOpen = false;\n  toggleDropdown() {\n    console.log('Toggle clicked');\n    this.dropdownOpen = !this.dropdownOpen;\n  }\n  setRole(role) {\n    this.roleChanged.emit(role);\n    this.dropdownOpen = false;\n  }\n  logout() {\n    this.logoutClicked.emit();\n  }\n};\n__decorate([Input()], ToolbarComponent.prototype, \"selectedRole\", void 0);\n__decorate([Output()], ToolbarComponent.prototype, \"roleChanged\", void 0);\n__decorate([Output()], ToolbarComponent.prototype, \"logoutClicked\", void 0);\nToolbarComponent = __decorate([Component({\n  selector: 'app-toolbar',\n  standalone: true,\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})], ToolbarComponent);\nexport { ToolbarComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}