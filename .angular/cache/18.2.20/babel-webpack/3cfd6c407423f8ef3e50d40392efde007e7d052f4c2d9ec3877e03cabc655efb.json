{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { TaskTableComponent } from './task-table/task-table.component';\nlet DashboardViewComponent = class DashboardViewComponent {\n  router;\n  http;\n  user = {};\n  isAdmin = false;\n  isOwner = false;\n  isViewer = false;\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n  }\n  ngOnInit() {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      this.user = JSON.parse(storedUser);\n      const role = this.user.role;\n      this.isAdmin = role === 'Admin';\n      this.isOwner = role === 'Owner';\n      this.isViewer = role === 'Viewer';\n    } else {\n      this.router.navigate(['/login']);\n    }\n  }\n};\nDashboardViewComponent = __decorate([Component({\n  selector: 'app-dashboard-view',\n  standalone: true,\n  imports: [CommonModule, HttpClientModule, SidebarComponent, TopbarComponent, TaskTableComponent],\n  templateUrl: './dashboard-view.component.html'\n})], DashboardViewComponent);\nexport { DashboardViewComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}