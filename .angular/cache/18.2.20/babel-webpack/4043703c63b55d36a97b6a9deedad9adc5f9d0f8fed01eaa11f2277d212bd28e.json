{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgChartsModule } from 'ng2-charts';\nlet TaskPieChartComponent = class TaskPieChartComponent {\n  set tasks(value) {\n    this._tasks = value || [];\n    this.updateChartData();\n  }\n  _tasks = [];\n  pieChartType = 'pie';\n  pieChartData = {\n    labels: ['Completed', 'Pending', 'Not Started'],\n    datasets: [{\n      data: [0, 0, 0],\n      backgroundColor: ['#22c55e', '#facc15', '#a3a3a3']\n    }]\n  };\n  updateChartData() {\n    const completed = this._tasks.filter(t => t.status === 'Completed').length;\n    const pending = this._tasks.filter(t => t.status === 'Pending').length;\n    const notStarted = this._tasks.filter(t => t.status === 'Not Started').length;\n    this.pieChartData = {\n      ...this.pieChartData,\n      datasets: [{\n        ...this.pieChartData.datasets[0],\n        data: [completed, pending, notStarted]\n      }]\n    };\n  }\n};\n__decorate([Input()], TaskPieChartComponent.prototype, \"tasks\", null);\nTaskPieChartComponent = __decorate([Component({\n  selector: 'app-task-pie-chart',\n  standalone: true,\n  imports: [CommonModule, NgChartsModule],\n  templateUrl: './task-pie-chart.component.html'\n})], TaskPieChartComponent);\nexport { TaskPieChartComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}