{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { NgChartsModule } from 'ng2-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nconst _c0 = () => ({\n  position: \"bottom\"\n});\nconst _c1 = a0 => ({\n  legend: a0\n});\nconst _c2 = () => ({\n  duration: 800,\n  easing: \"easeOutCubic\"\n});\nconst _c3 = (a0, a1) => ({\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: a0,\n  animation: a1\n});\nexport let TaskPieChartComponent = /*#__PURE__*/(() => {\n  class TaskPieChartComponent {\n    set tasks(value) {\n      this._tasks = value || [];\n      this.updateChartData();\n    }\n    _tasks = [];\n    pieChartType = 'pie';\n    pieChartData = {\n      labels: ['Completed', 'Pending', 'Not Started'],\n      datasets: [{\n        data: [0, 0, 0],\n        backgroundColor: ['#22c55e', '#facc15', '#a3a3a3']\n      }]\n    };\n    updateChartData() {\n      const completed = this._tasks.filter(t => t.status === 'Completed').length;\n      const pending = this._tasks.filter(t => t.status === 'Pending').length;\n      const notStarted = this._tasks.filter(t => t.status === 'Not Started').length;\n      this.pieChartData = {\n        ...this.pieChartData,\n        datasets: [{\n          ...this.pieChartData.datasets[0],\n          data: [completed, pending, notStarted]\n        }]\n      };\n    }\n    static ɵfac = function TaskPieChartComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TaskPieChartComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskPieChartComponent,\n      selectors: [[\"app-task-pie-chart\"]],\n      inputs: {\n        tasks: \"tasks\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 5,\n      vars: 10,\n      consts: [[1, \"bg-white\", \"shadow\", \"rounded-lg\", \"w-full\", \"max-w-full\", \"sm:max-w-md\", \"mx-auto\", \"p-4\", \"sm:p-6\", \"transition-opacity\", \"duration-700\", \"ease-out\", \"animate-fade-in\"], [1, \"text-base\", \"sm:text-lg\", \"font-semibold\", \"text-gray-700\", \"mb-4\", \"text-center\"], [1, \"relative\", \"w-full\", \"h-60\", \"sm:h-72\", \"md:h-80\"], [\"baseChart\", \"\", 3, \"data\", \"type\", \"options\"]],\n      template: function TaskPieChartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n          i0.ɵɵtext(2, \" \\uD83D\\uDCCA Task Status Overview \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2);\n          i0.ɵɵelement(4, \"canvas\", 3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"data\", ctx.pieChartData)(\"type\", ctx.pieChartType)(\"options\", i0.ɵɵpureFunction2(7, _c3, i0.ɵɵpureFunction1(4, _c1, i0.ɵɵpureFunction0(3, _c0)), i0.ɵɵpureFunction0(6, _c2)));\n        }\n      },\n      dependencies: [CommonModule, NgChartsModule, i1.BaseChartDirective],\n      encapsulation: 2\n    });\n  }\n  return TaskPieChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}