{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpHeaders } from '@angular/common/http';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = (a0, a1) => ({\n  \"text-gray-400 cursor-not-allowed\": a0,\n  \"text-indigo-600 hover:text-indigo-800\": a1\n});\nconst _c1 = (a0, a1) => ({\n  \"text-gray-300 cursor-not-allowed\": a0,\n  \"text-rose-600 hover:text-rose-800\": a1\n});\nfunction DashboardViewComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function DashboardViewComponent_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.createTask());\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 16);\n    i0.ɵɵelement(2, \"path\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" New Task \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardViewComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 18)(1, \"td\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 20);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 21);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 19)(8, \"span\", 22);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"td\", 23)(11, \"div\", 24)(12, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function DashboardViewComponent_tr_23_Template_button_click_12_listener() {\n      const task_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.canEdit() && ctx_r1.editTask(task_r4));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(13, \"svg\", 26);\n    i0.ɵɵelement(14, \"path\", 27)(15, \"path\", 28);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(16, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function DashboardViewComponent_tr_23_Template_button_click_16_listener() {\n      const task_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.canDelete() && ctx_r1.confirmDelete(task_r4));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(17, \"svg\", 26);\n    i0.ɵɵelement(18, \"path\", 30)(19, \"path\", 31)(20, \"path\", 32)(21, \"path\", 33);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const task_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r5 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r4.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r4.category);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.getStatusClass(task_r4.status));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(task_r4.status);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.canEdit())(\"ngClass\", i0.ɵɵpureFunction2(9, _c0, !ctx_r1.canEdit(), ctx_r1.canEdit()));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.canDelete())(\"ngClass\", i0.ɵɵpureFunction2(12, _c1, !ctx_r1.canDelete(), ctx_r1.canDelete()));\n  }\n}\nfunction DashboardViewComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\", 35)(2, \"h3\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"form\", 37)(5, \"div\")(6, \"label\", 38);\n    i0.ɵɵtext(7, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 39);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardViewComponent_div_24_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.newTask.title, $event) || (ctx_r1.newTask.title = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\")(10, \"label\", 38);\n    i0.ɵɵtext(11, \"Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 40);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardViewComponent_div_24_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.newTask.category, $event) || (ctx_r1.newTask.category = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\")(14, \"label\", 38);\n    i0.ɵɵtext(15, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"select\", 41);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function DashboardViewComponent_div_24_Template_select_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.newTask.status, $event) || (ctx_r1.newTask.status = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementStart(17, \"option\", 42);\n    i0.ɵɵtext(18, \"Completed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"option\", 43);\n    i0.ɵɵtext(20, \"Pending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"option\", 44);\n    i0.ɵɵtext(22, \"Not Started\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(23, \"div\", 45)(24, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function DashboardViewComponent_div_24_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closeModal());\n    });\n    i0.ɵɵtext(25, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"button\", 47);\n    i0.ɵɵlistener(\"click\", function DashboardViewComponent_div_24_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.saveTask());\n    });\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.isEditMode ? \"Edit Task\" : \"Create New Task\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.newTask.title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.newTask.category);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.newTask.status);\n    i0.ɵɵadvance(11);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.isEditMode ? \"Update\" : \"Create\", \" \");\n  }\n}\nfunction DashboardViewComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\", 48)(2, \"h3\", 49);\n    i0.ɵɵtext(3, \"Confirm Deletion\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 50);\n    i0.ɵɵtext(5, \" Are you sure you want to delete \");\n    i0.ɵɵelementStart(6, \"strong\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \"? \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 51)(10, \"button\", 52);\n    i0.ɵɵlistener(\"click\", function DashboardViewComponent_div_25_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.cancelDelete());\n    });\n    i0.ɵɵtext(11, \" Cancel \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function DashboardViewComponent_div_25_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deleteTask());\n    });\n    i0.ɵɵtext(13, \" Delete \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r1.taskToDelete == null ? null : ctx_r1.taskToDelete.title);\n  }\n}\nexport let DashboardViewComponent = /*#__PURE__*/(() => {\n  class DashboardViewComponent {\n    http;\n    selectedRole = 'Viewer';\n    tasks = [];\n    showModal = false;\n    dropdownOpen = false;\n    newTask = {\n      id: null,\n      title: '',\n      category: '',\n      status: 'Not Started'\n    };\n    taskToDelete = null;\n    showDeleteConfirm = false;\n    isEditMode = false;\n    constructor(http) {\n      this.http = http;\n    }\n    ngOnInit() {\n      const savedRole = localStorage.getItem('user_role');\n      this.selectedRole = savedRole || 'Viewer';\n      this.loadTasks();\n    }\n    getHeaders() {\n      return new HttpHeaders({\n        'x-user-role': this.selectedRole\n      });\n    }\n    loadTasks() {\n      this.http.get('/api/tasks', {\n        headers: this.getHeaders()\n      }).subscribe({\n        next: res => {\n          this.tasks = res;\n        },\n        error: err => {\n          console.error('Failed to load tasks', err);\n        }\n      });\n    }\n    // Permissions\n    canEdit() {\n      return this.selectedRole === 'Admin' || this.selectedRole === 'Owner';\n    }\n    canDelete() {\n      return this.selectedRole === 'Admin';\n    }\n    // UI Styling\n    getStatusClass(status) {\n      switch (status) {\n        case 'Completed':\n          return 'bg-green-100 text-green-700';\n        case 'Pending':\n          return 'bg-yellow-100 text-yellow-700';\n        case 'Not Started':\n          return 'bg-gray-100 text-gray-700';\n        default:\n          return 'bg-gray-100 text-gray-700';\n      }\n    }\n    // Role update from toolbar\n    setRole(role) {\n      this.selectedRole = role;\n      localStorage.setItem('user_role', role);\n      this.loadTasks();\n    }\n    logout() {\n      localStorage.removeItem('user_role');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    // Create / Edit Modal Control\n    createTask() {\n      this.showModal = true;\n      this.isEditMode = false;\n      this.newTask = {\n        id: null,\n        title: '',\n        category: '',\n        status: 'Not Started'\n      };\n    }\n    editTask(task) {\n      this.showModal = true;\n      this.isEditMode = true;\n      this.newTask = {\n        ...task\n      };\n    }\n    closeModal() {\n      this.showModal = false;\n    }\n    saveTask() {\n      if (this.newTask.title && this.newTask.category) {\n        const method = this.isEditMode ? this.http.patch(`/api/tasks/${this.newTask['id']}`, this.newTask, {\n          headers: this.getHeaders()\n        }) : this.http.post('/api/tasks', this.newTask, {\n          headers: this.getHeaders()\n        });\n        method.subscribe({\n          next: () => {\n            this.loadTasks();\n            this.closeModal();\n          },\n          error: err => {\n            console.error('Failed to save task', err);\n          }\n        });\n      }\n    }\n    // Delete Logic\n    confirmDelete(task) {\n      this.taskToDelete = task;\n      this.showDeleteConfirm = true;\n    }\n    cancelDelete() {\n      this.taskToDelete = null;\n      this.showDeleteConfirm = false;\n    }\n    deleteTask() {\n      if (!this.taskToDelete) return;\n      this.http.delete(`/api/tasks/${this.taskToDelete.id}`, {\n        headers: this.getHeaders()\n      }).subscribe({\n        next: () => {\n          this.loadTasks();\n          this.cancelDelete();\n        },\n        error: err => {\n          console.error('Failed to delete task', err);\n          this.cancelDelete();\n        }\n      });\n    }\n    static ɵfac = function DashboardViewComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DashboardViewComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardViewComponent,\n      selectors: [[\"app-dashboard-view\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 26,\n      vars: 5,\n      consts: [[1, \"min-h-screen\", \"flex\", \"flex-col\", \"md:flex-row\", \"bg-gradient-to-r\", \"from-purple-100\", \"via-blue-100\", \"to-pink-100\"], [1, \"flex\", \"flex-col\", \"flex-grow\"], [3, \"roleChanged\", \"logoutClicked\", \"selectedRole\"], [1, \"flex-grow\", \"px-6\", \"py-6\"], [1, \"flex\", \"justify-between\", \"items-center\", \"mb-4\"], [1, \"text-lg\", \"font-semibold\", \"text-gray-700\"], [\"class\", \"bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white font-medium px-4 py-2 rounded-lg shadow flex items-center gap-2\", 3, \"click\", 4, \"ngIf\"], [1, \"overflow-x-auto\", \"rounded-lg\", \"bg-white\", \"shadow-lg\", \"border\", \"border-gray-100\"], [1, \"min-w-full\", \"divide-y\", \"divide-gray-200\", \"text-sm\"], [1, \"bg-purple-100\", \"text-purple-800\", \"uppercase\", \"tracking-wide\"], [1, \"px-6\", \"py-3\", \"text-left\"], [1, \"px-6\", \"py-3\", \"text-left\", \"w-12\"], [1, \"divide-y\", \"divide-gray-100\"], [\"class\", \"group hover:bg-purple-50 transition\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"fixed inset-0 z-50 bg-black bg-opacity-30 flex items-center justify-center\", 4, \"ngIf\"], [1, \"bg-gradient-to-r\", \"from-purple-500\", \"to-pink-500\", \"hover:from-purple-600\", \"hover:to-pink-600\", \"text-white\", \"font-medium\", \"px-4\", \"py-2\", \"rounded-lg\", \"shadow\", \"flex\", \"items-center\", \"gap-2\", 3, \"click\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"viewBox\", \"0 0 24 24\", 1, \"h-5\", \"w-5\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"d\", \"M12 4v16m8-8H4\"], [1, \"group\", \"hover:bg-purple-50\", \"transition\"], [1, \"px-6\", \"py-3\"], [1, \"px-6\", \"py-3\", \"font-medium\", \"text-gray-900\"], [1, \"px-6\", \"py-3\", \"text-gray-600\"], [1, \"px-2\", \"py-1\", \"text-xs\", \"font-semibold\", \"rounded-full\", 3, \"ngClass\"], [1, \"px-6\", \"py-3\", \"text-right\"], [1, \"opacity-0\", \"group-hover:opacity-100\", \"transition-opacity\", \"duration-200\", \"flex\", \"justify-end\", \"gap-4\", \"items-center\"], [\"aria-label\", \"Edit Task\", 1, \"transition\", 3, \"click\", \"disabled\", \"ngClass\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"1.8\", \"viewBox\", \"0 0 24 24\", 1, \"h-6\", \"w-6\"], [\"d\", \"M12 20h9\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [\"d\", \"M16.5 3.5a2.121 2.121 0 013 3L7 19l-4 1 1-4 12.5-12.5z\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [\"aria-label\", \"Delete Task\", 1, \"transition\", 3, \"click\", \"disabled\", \"ngClass\"], [\"d\", \"M3 6h18\", \"stroke-linecap\", \"round\"], [\"d\", \"M8 6v14a2 2 0 002 2h4a2 2 0 002-2V6\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [\"d\", \"M10 11v6M14 11v6\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [\"d\", \"M9 6V4a1 1 0 011-1h4a1 1 0 011 1v2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\"], [1, \"fixed\", \"inset-0\", \"z-50\", \"bg-black\", \"bg-opacity-30\", \"flex\", \"items-center\", \"justify-center\"], [1, \"bg-white\", \"rounded-lg\", \"shadow-xl\", \"p-6\", \"w-full\", \"max-w-md\"], [1, \"text-xl\", \"font-semibold\", \"text-gray-700\", \"mb-4\"], [1, \"space-y-4\"], [1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"type\", \"text\", \"name\", \"title\", 1, \"w-full\", \"border\", \"border-gray-300\", \"rounded-md\", \"px-3\", \"py-2\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-purple-500\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"name\", \"category\", 1, \"w-full\", \"border\", \"border-gray-300\", \"rounded-md\", \"px-3\", \"py-2\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-purple-500\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"status\", 1, \"w-full\", \"border\", \"border-gray-300\", \"rounded-md\", \"px-3\", \"py-2\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-purple-500\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"Completed\"], [\"value\", \"Pending\"], [\"value\", \"Not Started\"], [1, \"flex\", \"justify-end\", \"gap-3\", \"pt-2\"], [\"type\", \"button\", 1, \"px-4\", \"py-2\", \"rounded-md\", \"border\", \"border-gray-300\", \"text-gray-600\", \"hover:bg-gray-100\", 3, \"click\"], [\"type\", \"button\", 1, \"px-4\", \"py-2\", \"rounded-md\", \"bg-purple-600\", \"text-white\", \"hover:bg-purple-700\", 3, \"click\"], [1, \"bg-white\", \"rounded-lg\", \"shadow-xl\", \"p-6\", \"w-full\", \"max-w-sm\", \"text-center\"], [1, \"text-lg\", \"font-semibold\", \"text-gray-800\", \"mb-2\"], [1, \"text-sm\", \"text-gray-600\", \"mb-6\"], [1, \"flex\", \"justify-center\", \"gap-4\"], [1, \"px-4\", \"py-2\", \"rounded-md\", \"border\", \"border-gray-300\", \"text-gray-600\", \"hover:bg-gray-100\", 3, \"click\"], [1, \"px-4\", \"py-2\", \"rounded-md\", \"bg-rose-600\", \"text-white\", \"hover:bg-rose-700\", 3, \"click\"]],\n      template: function DashboardViewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵelement(1, \"app-sidebar\");\n          i0.ɵɵelementStart(2, \"div\", 1)(3, \"app-toolbar\", 2);\n          i0.ɵɵlistener(\"roleChanged\", function DashboardViewComponent_Template_app_toolbar_roleChanged_3_listener($event) {\n            return ctx.setRole($event);\n          })(\"logoutClicked\", function DashboardViewComponent_Template_app_toolbar_logoutClicked_3_listener() {\n            return ctx.logout();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"main\", 3)(5, \"div\", 4)(6, \"h3\", 5);\n          i0.ɵɵtext(7, \"\\uD83D\\uDCCB Task List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, DashboardViewComponent_button_8_Template, 4, 0, \"button\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 7)(10, \"table\", 8)(11, \"thead\", 9)(12, \"tr\")(13, \"th\", 10);\n          i0.ɵɵtext(14, \"#\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"th\", 10);\n          i0.ɵɵtext(16, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"th\", 10);\n          i0.ɵɵtext(18, \"Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"th\", 10);\n          i0.ɵɵtext(20, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"th\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"tbody\", 12);\n          i0.ɵɵtemplate(23, DashboardViewComponent_tr_23_Template, 22, 15, \"tr\", 13);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(24, DashboardViewComponent_div_24_Template, 28, 5, \"div\", 14)(25, DashboardViewComponent_div_25_Template, 14, 1, \"div\", 14);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"selectedRole\", ctx.selectedRole);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.canEdit());\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showModal);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showDeleteConfirm);\n        }\n      },\n      dependencies: [CommonModule, i2.NgClass, i2.NgForOf, i2.NgIf, FormsModule, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, HttpClientModule, SidebarComponent, ToolbarComponent]\n    });\n  }\n  return DashboardViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}