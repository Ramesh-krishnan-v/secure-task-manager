{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nlet LoginComponent = class LoginComponent {\n  fb;\n  router;\n  http;\n  form;\n  errorMessage = '';\n  constructor(fb, router, http) {\n    this.fb = fb;\n    this.router = router;\n    this.http = http;\n    this.form = this.fb.group({\n      email: ['', Validators.required],\n      // Changed from email to username\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    // if (this.form.invalid) return;\n    const {\n      email,\n      password\n    } = this.form.value;\n    this.http.post('/api/auth/login', {\n      email,\n      password\n    }).subscribe({\n      next: res => {\n        localStorage.setItem('access_token', res.access_token);\n        localStorage.setItem('user', JSON.stringify(res.user));\n        this.router.navigate(['/dashboard-view']);\n      },\n      error: err => {\n        this.errorMessage = err.error?.message || 'Login failed';\n        alert(this.errorMessage);\n      }\n    });\n  }\n  goToCreateUser() {\n    this.router.navigate(['/create-user']);\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  standalone: true,\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  imports: [CommonModule, ReactiveFormsModule, HttpClientModule]\n})], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}